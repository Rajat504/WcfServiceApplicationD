//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClientApplicationD.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IEMPLOYEESERVICES")]
    public interface IEMPLOYEESERVICES {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/GetData", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/GetDataResponse")]
        string GetData(int values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/GetData", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/AddEmployeeRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/AddEmployeeRecordsResponse")]
        string AddEmployeeRecords(WcfServiceApplicationD.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/AddEmployeeRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/AddEmployeeRecordsResponse")]
        System.Threading.Tasks.Task<string> AddEmployeeRecordsAsync(WcfServiceApplicationD.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/GetEmployeeRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/GetEmployeeRecordsResponse")]
        System.Data.DataSet GetEmployeeRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/GetEmployeeRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/GetEmployeeRecordsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEmployeeRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/DeleteRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/DeleteRecordsResponse")]
        string DeleteRecords(WcfServiceApplicationD.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/DeleteRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/DeleteRecordsResponse")]
        System.Threading.Tasks.Task<string> DeleteRecordsAsync(WcfServiceApplicationD.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/SearchEmployeeRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/SearchEmployeeRecordsResponse")]
        System.Data.DataSet SearchEmployeeRecords(WcfServiceApplicationD.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/SearchEmployeeRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/SearchEmployeeRecordsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchEmployeeRecordsAsync(WcfServiceApplicationD.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/UpdateEmployeeRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/UpdateEmployeeRecordsResponse")]
        string UpdateEmployeeRecords(WcfServiceApplicationD.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEMPLOYEESERVICES/UpdateEmployeeRecords", ReplyAction="http://tempuri.org/IEMPLOYEESERVICES/UpdateEmployeeRecordsResponse")]
        System.Threading.Tasks.Task<string> UpdateEmployeeRecordsAsync(WcfServiceApplicationD.Employee emp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEMPLOYEESERVICESChannel : WcfClientApplicationD.ServiceReference.IEMPLOYEESERVICES, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EMPLOYEESERVICESClient : System.ServiceModel.ClientBase<WcfClientApplicationD.ServiceReference.IEMPLOYEESERVICES>, WcfClientApplicationD.ServiceReference.IEMPLOYEESERVICES {
        
        public EMPLOYEESERVICESClient() {
        }
        
        public EMPLOYEESERVICESClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EMPLOYEESERVICESClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EMPLOYEESERVICESClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EMPLOYEESERVICESClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int values) {
            return base.Channel.GetData(values);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int values) {
            return base.Channel.GetDataAsync(values);
        }
        
        public string AddEmployeeRecords(WcfServiceApplicationD.Employee emp) {
            return base.Channel.AddEmployeeRecords(emp);
        }
        
        public System.Threading.Tasks.Task<string> AddEmployeeRecordsAsync(WcfServiceApplicationD.Employee emp) {
            return base.Channel.AddEmployeeRecordsAsync(emp);
        }
        
        public System.Data.DataSet GetEmployeeRecords() {
            return base.Channel.GetEmployeeRecords();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEmployeeRecordsAsync() {
            return base.Channel.GetEmployeeRecordsAsync();
        }
        
        public string DeleteRecords(WcfServiceApplicationD.Employee emp) {
            return base.Channel.DeleteRecords(emp);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRecordsAsync(WcfServiceApplicationD.Employee emp) {
            return base.Channel.DeleteRecordsAsync(emp);
        }
        
        public System.Data.DataSet SearchEmployeeRecords(WcfServiceApplicationD.Employee emp) {
            return base.Channel.SearchEmployeeRecords(emp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchEmployeeRecordsAsync(WcfServiceApplicationD.Employee emp) {
            return base.Channel.SearchEmployeeRecordsAsync(emp);
        }
        
        public string UpdateEmployeeRecords(WcfServiceApplicationD.Employee emp) {
            return base.Channel.UpdateEmployeeRecords(emp);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEmployeeRecordsAsync(WcfServiceApplicationD.Employee emp) {
            return base.Channel.UpdateEmployeeRecordsAsync(emp);
        }
    }
}
